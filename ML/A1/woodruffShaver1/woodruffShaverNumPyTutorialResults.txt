Exercise 1

1-4:
 [1 2 3 4]

Array Data Type:
 int64

Exercise 2

2x7 0's: 
 [[0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0.]]

Exercise 3

1-21 by 2.5: 
 [ 1.   3.5  6.   8.5 11.  13.5 16.  18.5 21. ]

Exercise 4

Element (5, 8) of 1-40 in 5x8: 
 40

Exercise 5

Array with params: 
 [[[ 0  1]
  [ 2  3]
  [ 4  5]]

 [[ 6  7]
  [ 8  9]
  [10 11]]

 [[12 13]
  [14 15]
  [16 17]]]

Exercise 6

Trig Function:
 [[3.22268087 2.84180419 3.58350574 3.46389036]
 [4.33758    3.78781019 4.69137236 4.32927545]
 [4.40823358 3.93191915 4.73789726 4.58514731]
 [3.9591545  3.3312491  4.33214712 4.1528991 ]]

Exercise 7

Max and Min of sorted array:
 0.034491647736218156 
 0.7911335837144855
Sorted array concat with self:
 [[0.03449165 0.06072315 0.23873051 0.48558529 0.49603446]
 [0.58749719 0.69512087 0.73951901 0.76838288 0.79113358]
 [0.03449165 0.06072315 0.23873051 0.48558529 0.49603446]
 [0.58749719 0.69512087 0.73951901 0.76838288 0.79113358]]

Exercise 8

First and Last:
 0 ,  9

Even Indices
 [0 2 4 6 8]

First Four
 [0 1 2 3]

Last Three
 [7 8 9]

Four to Eight
 [3 4 5 6]

First and Last
 [[87. 60. 71.  2. 97. 83. 21.]
 [ 9. 20.  5. 33. 39. 27. 83.]]

M1
 [[37. 95. 73. 60. 16. 16.  6.]
 [87. 60. 71.  2. 97. 83. 21.]
 [18. 18. 30. 52. 43. 29. 61.]
 [14. 29. 37. 46. 79. 20. 51.]
 [59.  5. 61. 17.  7. 95. 97.]
 [81. 30. 10. 68. 44. 12. 50.]
 [ 3. 91. 26. 66. 31. 52. 55.]
 [18. 97. 78. 94. 89. 60. 92.]
 [ 9. 20.  5. 33. 39. 27. 83.]]

<10:
 [0. 6. 2. 5. 7. 3. 9. 5.]

Even Row:
 [[37. 95. 73. 60. 16. 16.  6.]
 [18. 18. 30. 52. 43. 29. 61.]
 [59.  5. 61. 17.  7. 95. 97.]
 [ 3. 91. 26. 66. 31. 52. 55.]
 [ 9. 20.  5. 33. 39. 27. 83.]]

Odd Column
 [[95. 60. 18. 29.  5. 30. 91. 97. 20.]
 [60.  2. 52. 46. 17. 68. 66. 94. 33.]
 [16. 83. 29. 20. 95. 12. 52. 60. 27.]]

Even Row Odd Column
 [[95. 18.  5. 91. 20.]
 [60. 52. 17. 66. 33.]
 [16. 29. 95. 52. 27.]]

Even Indices
 [[37. 18. 59.  3.  9.]
 [73. 30. 61. 26.  5.]
 [16. 43.  7. 31. 39.]
 [ 6. 61. 97. 55. 83.]]
